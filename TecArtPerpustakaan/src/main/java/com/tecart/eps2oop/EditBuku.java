/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tecart.eps2oop;

import java.sql.*;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author gunam
 */
public class EditBuku extends javax.swing.JFrame {

    public Statement statement;
    public ResultSet result;
    Connection connection = DBConnection.OpenConnection();
    private int id_buku;

    /**
     * Creates new form EditBuku
     *
     * @param id_buku
     */
    public EditBuku(int id_buku) {
        this.id_buku = id_buku;
        initComponents();
        getBookData();
    }

    private boolean checkInput(String type, String input) {
        if ("text".equals(type)) {
            if (input.length() > 255) {
                JOptionPane.showMessageDialog(null, "Judul and Penulis max length is 255 character !", "Data Validation", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }

        if ("tahunTerbit".equals(type)) {
            if (input.length() > 4) {
                JOptionPane.showMessageDialog(null, "MANa ada buku Terbit di mAsa depan !", "Data Validation", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }

            int year;
            try {
                year = Integer.parseInt(input);
            } catch (NumberFormatException e) {
                year = 0;
            }

            if (year < 1 || year > LocalDate.now().getYear()) {
                JOptionPane.showMessageDialog(null, "Please input a valid year !", "Data Validation", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }
        return true;
    }

    private void getBookData() {
        try {
            statement = connection.createStatement();
            result = statement.executeQuery("SELECT * FROM buku WHERE id_buku = " + this.id_buku + ";");

            if (result.next()) {
                inputJudul.setText(result.getString("judul_buku"));
                inputPenulis.setText(result.getString("penulis_buku"));
                inputTahunTerbit.setText(String.valueOf(result.getInt("tahun_terbit")));
                inputDeskripsi.setText(result.getString("deskripsi"));
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pageBanner = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputJudul = new javax.swing.JTextField();
        inputPenulis = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        inputTahunTerbit = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputDeskripsi = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnUpdateBook = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(502, 393));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pageBanner.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pageBanner.setText("Edit Book | Perpustakaan TecArt");
        getContentPane().add(pageBanner, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel3.setText("Judul Buku:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));
        getContentPane().add(inputJudul, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 280, -1));

        inputPenulis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPenulisActionPerformed(evt);
            }
        });
        getContentPane().add(inputPenulis, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 280, -1));

        jLabel5.setText("Penulis:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel4.setText("Tahun Terbit: ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        inputTahunTerbit.setColumns(4);
        getContentPane().add(inputTahunTerbit, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 100, -1));

        jScrollPane1.setViewportView(inputDeskripsi);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 280, 100));

        jLabel1.setText("Deskripsi:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, -1, -1));

        btnUpdateBook.setText("Submit");
        btnUpdateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdateBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, -1, -1));

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void inputPenulisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPenulisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPenulisActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        try {
            new IndexPerpustakaan().setVisible(true);
        } catch (SQLException ex) {
            System.out.println(ex);
            new Login().setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookActionPerformed
        try {
            statement = connection.createStatement();
            if (inputJudul.getText().equals("") || inputPenulis.getText().equals("") || inputDeskripsi.getText().equals("") || inputTahunTerbit.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please fill all input form before submitting !", "Data Validation", JOptionPane.INFORMATION_MESSAGE);
            } else if (checkInput("text", inputJudul.getText()) && checkInput("text", inputPenulis.getText()) && checkInput("tahunTerbit", inputTahunTerbit.getText())) {
                String sql = "UPDATE buku SET judul_buku = '" + inputJudul.getText()
                        + "', penulis_buku = '" + inputPenulis.getText()
                        + "', deskripsi = '" + inputDeskripsi.getText()
                        + "', tahun_terbit = " + inputTahunTerbit.getText()
                        + " WHERE id_buku = '" + this.id_buku + "'";

                statement.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Book have been successfully updated !");
                new IndexPerpustakaan().setVisible(true);
                this.dispose();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnUpdateBookActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this book?",
                "Confirm Deletion", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                String sql = "DELETE FROM buku WHERE id_buku = " + this.id_buku;
                statement.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Book have been successfully deleted !");

                new IndexPerpustakaan().setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdateBook;
    private javax.swing.JTextPane inputDeskripsi;
    private javax.swing.JTextField inputJudul;
    private javax.swing.JTextField inputPenulis;
    private javax.swing.JTextField inputTahunTerbit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pageBanner;
    // End of variables declaration//GEN-END:variables
}
